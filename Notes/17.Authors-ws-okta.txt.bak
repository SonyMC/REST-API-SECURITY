Refer:
	- Okta.png
	-D:\OneDrive\Study\Java\REST-API-Security\11.authors-ws-okta

Note: 
	- We will not be using teh DB to get the users bit instead we will be using Okta
	- Sprign Security will be managing all security
	

***users Profile url using browser:
			- https://localhost:8082/users/profile

			    UserName: 00u55y4owchfr09y45d7
		         UserAuthorities: [ROLE_USER, SCOPE_email, SCOPE_openid, SCOPE_profile]	
	

***Registering Authors API in Okta:
	- Okta -> Applications-> Applications-> Create App Integration ->
		 - Sign in Method = OIDC - OpenID Connect
		 - Application Type = Web Application 
		 - App integration Name = authors-api
		 - Logo = Optional
		 - Grant type : Client acting on behalf of a user = Authorization Code
		 - Sign-in redirect URIs = http://localhost:8081/authorization-code/callback
		  -Sign-out Redirect uri = http://localhost:8081
		 - Base URIs = http://localhost:8081/
		 - Assignments = Allow everyone in your organization to access 
			- Optional: If you want to restrict access, first create group and selct 'Limit access to selected groups'

		 - Note down client id and client secret:
			- Client id: 0oa546fn9qVdmB3lj5d7
			- Client secret : **** ( refer Secrets folder in local) 


1) Change authors-ws:
		- D:\OneDrive\Study\Java\REST-API-Security\11.authors-ws-okta
		- POM.xml;
			- Comment dependency for jawa-jwt, mySQL, JPA
			- Add dependency for Okta

				
		- security\SecurityConfig.java:
			- Change:
				- .antMatchers("/v1/authors/{authorId}").access("hasAuthority('Dev_USER') and hasAuthority('Dev_GET_AUTHOR')") 
				- .anttMatchers("/v1/authors").access("hasAuthority('Dev_ADMIN') and hasAuthority('Dev_CREATE_AUTHOR')")   
				- We are providing authorization for'Dev_USER', 'Dev_ADMIN' ,'Dev_GET_AUTHOR' & 'Dev_CREATE_AUTHOR'

	- We are providing authorization to Role 'USER', and 'ADMIN' for 'GET_AUTHOR' & 'CREATE_AUTHOR' respectivley
	- These need to configured in Okta			

		- security\JwtAuthorizationFilter.java;
			- Delete

		- security\SecurityConstants.java;
			- Delete

		- AuthorsWsApplication.java
			- Change : Remove BCryptPasswordEncoder bean 


		- security\UsersDetailsServiceImpl.java
			- Delete
		


		- application.properties
			- Configure authors-api okta properties for issuer, client id, client secret, redirect uri 
				
			- Issuer:
				- copy the base url in the browser from the Okta user home page and append it with 'oauth2/default'
 
			- Client id:
				- Copy from home-apge of authors-api in Okta 
			- Client secret:
				- Copy from home-apge of authors-api in Okta 	
			- Redirect uri
				-  Copy last part of Sign-in redirect uri from home-apge of authors-api in Okta 		


			- Comment out mySQl and Hibernate properties 
			
			- Add Okta debugging
				
			- Add Spring Security logging	
			
			





2)Groups:
 Okta-> Directory -> Groups:
	- You wil lobseerve all users are set under default group called 'Everyone'

3) Scopes:
Okta-> Security-> API -> Authorization Servers-> default ->scopes


4) Add group as a claim in Okta:
			- Okta -> Authorization Server -> Default -> Claims:
					- Add claim -> :
							- Name = groups
							- Include Token Type = Access Token 
							- Value Type = Groups
							- Filter = Starts with Dev
							- Include in = Any Scope

5)Configuring Authorization in Okta:
    

	- We are providing authorization for'Dev_USER', 'Dev_ADMIN' ,'Dev_GET_AUTHOR' & 'Dev_CREATE_AUTHOR' 
	- These need to configured in Okta
	
	- Create 4 groups in Okta:
			- Dev_USER,Dev_GET_AUTHOR,Dev_ADMIN,Dev_CREATE_AUTHOR
			- Okta -> Directory -> Groups -> Add Group 
			
6) Assign user to group in Okta:
		- Okta-> Directory -> Groups:
				- Dev_Admin -> People -> Assign people -> Add required users
				- Similarly add users for Groups Dev_USER,Dev_CREATE_AUTHOR, Dev_GET_AUTHOR 
		- Okta -> Applications-> authors-api-> click on tool icon -> Assign to groups -> Assign to above created groups		


				
7)Postman:	

*** Note: I have not been able to get teh authorities workign from Okta  and the authors=ws-api returns bad request!!! Thsi migh tbe because I am using free version of Okta with limited functionality. However this still be used as a guide

Okta-AUTHOR-POST-ADMIN:
		- Delete all cookies 
		- POST : https://localhost:8081/v1/authors
		- Request-> Authorization -> Type = OAuth2.0 
		- Configure new token:
								- Token Name = okta-token-2
								- Grant type = Authorization code
								- Callback URL = https://www.getpostman.com/oauth2/callback
									- Authorize using Browser = leave unchecked
								- Auth url : https://{your-okta-domain}/oauth2/default/v1/authorize
											- okta-domain: can be foun din logged in okta url( remeber to delete '-admin':
												- https://dev-45554186-admin.okta.com/admin/app/oidc_client/instance/0oa546fn9qVdmB3lj5d7/#tab-general
											- https://dev-45554186.okta.com/oauth2/default/v1/authorize
								- Access Token URL: https://{your-okta-domain}/oauth2/default/v1/token
											- https://dev-45554186.okta.com/oauth2/default/v1/token
									
								- Client id: Okta-> Applications ->Applications -> users-api -> Client ID =  0oa546fn9qVdmB3lj5d7
								- Client secret : Okta-> Applications ->Applications -> users-api -> Client Secret = ***** ( refer Secrets folder in local directory)
								- Scope = openid
								- State = myTestState
								- Client Authentication = Send Client credentials in Body
								
								- Delete consent using 'Delete-Grant' request
								- Press 'Get New Access Token'  button in 'Access-Token-Request' request which we have created now 
								- You will be presented with Okta Authentication screen 
										- Enter credentials
								- Next you will be shown Okta's consent screen with openid label:
										- Allow acces
								- Postman will geenrate as response Access Token & ID Token( because we are uisng OPenID Connect - refer 'OpenIDConnect.png' and '15.OOPenIDConnect.txt'  :
										- Access Token
											- Token name = okta-token-2
											- Token type = Bearer
											- Expires_in = 3600
											- Scope = openid ( Note: we can give 'openid profile' if we want profile details in ID TokeN)
										- id_token
								- We can see Access Token and id_token as Postman is acting as both Front and Back Channel
								- - Decode Acces Toek using jwt.io and ensure Group is included as a claim
								- Click on Use Token
								- Send request 
								
								
15)Postman:	

*** Note: I have not been able to get teh authorities workign from Okta  and the authors=ws-api returns bad request!!! Thsi migh tbe because I am using free version of Okta with limited functionality. However this still be used as a guide

	Okta-AUTHOR-GET-USER:
	GET: https://localhost:8081/v1/authors/12345678912
	- Follow same steps as above
	
